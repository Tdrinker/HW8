#    calc40.ums
#
#    Purpose: contains calculator-related functions.
#
#    By: Ge Gao, Ari Brown

	.zero r0
	.temp r6, r7
	.section rodata
	jumptable:
	.space 256

//////////////////////////// initialize the jump table /////////////////////////
	.section init
init_table:
	output "start initializing jumptable\n"
	push r3 on stack r2                  // saves non-volatile pointer r3
	push r4 on stack r2				     // saves non-volatile pointer r4
	r3 := 0								 // r3 holds the current table index
	output "continue initializing jumptable\n"

init_table_loop:
	r4 := jumptable + r3			     // r4 holds the position in the table
	m[r0][r4] := input_error 			 // initialize current bucket to error
	r3 := r3 + 1 						 // update current table index
	r5 := 256 - r3						 // keep initializing while not at 
	if (r5 != 0) goto init_table_loop    // the end of the table

	pop r4 off stack r2 				 // restore r4
	pop r3 off stack r2					 // restore r3


////////////////////// all the calculator related macros ///////////////////////
	.section text
main:
	goto waiting 						 // start the program with waiting state

input_error:
	output "invalid input character\n"   
	goto waiting                		 // go back to waiting state after error

waiting:
	r1 := input()						 // ask for the input

waiting_with_character:
	r5 := jumptable + r1				 // retrieve the position in the table
	r5 := m[r0][r5]						 
	goto r5
	halt

/////////////////// Commands Specifications and Initializations ////////////////
	.section init
m[r0][jumptable + '*'] := mul
	.section text
mul:
    output "multiply\n"
    halt
